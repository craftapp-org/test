version: "3.8"

x-defaults: &defaults
  PROJECT_NAME: "test"
  FRONTEND_PORT: 3000
  BACKEND_PORT: 8000
  HOST_IP: ""
services:
  postgres:
    networks:
      - app-network
    env_file:
      - ./backend/.env
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./devops/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - "com.docker.compose.project.resource-control=true"
          
  backend:
    networks:
      - app-network
    build: ./backend
    volumes:
      - ./backend/.env:/app/.env
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    #environment:
      # DB_HOST: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}"
      # FRONTEND_DOMAIN: "http://54.236.65.244:3000"
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.docker.compose.project.resource-control=true"

  frontend:
    networks:
      - app-network
    build: ./frontend
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    restart: unless-stopped
    # environment:
    #   NEXT_PUBLIC_API_URL: "http://54.236.65.244:8000"
      # NEXT_PUBLIC_EXTERNAL_API_URL: "http://${HOST_IP}:8000" # For browser access
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    labels:
      - "com.docker.compose.project.resource-control=true"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/${PROJECT_NAME}/postgres-data
      o: bind
    labels:
      - "com.docker.compose.volume.size=10GB"
networks:
  app-network:
    driver: bridge